"use strict";(self.webpackChunkreplayforge=self.webpackChunkreplayforge||[]).push([[2041],{7435:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>r,metadata:()=>a,toc:()=>o});var s=i(4848),t=i(8453);const r={sidebar_position:1},l="SQLite Sink Plugin",a={id:"tutorial-player-sinks/configure-splayer-sqlite-sink",title:"SQLite Sink Plugin",description:"The SQLite Sink plugin provides a way to store and retrieve data in a SQLite database through HTTP endpoints. It supports basic CRUD operations and querying capabilities.",source:"@site/docs/tutorial-player-sinks/configure-splayer-sqlite-sink.md",sourceDirName:"tutorial-player-sinks",slug:"/tutorial-player-sinks/configure-splayer-sqlite-sink",permalink:"/replayforge/docs/tutorial-player-sinks/configure-splayer-sqlite-sink",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tutorial-player-sinks/configure-splayer-sqlite-sink.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Tutorial - Player sinks",permalink:"/replayforge/docs/category/tutorial---player-sinks"},next:{title:"Use cases",permalink:"/replayforge/docs/category/use-cases"}},d={},o=[{value:"Configuration",id:"configuration",level:2},{value:"Input event format",id:"input-event-format",level:2},{value:"Create/Update Record (POST)",id:"createupdate-record-post",level:3},{value:"Update Record (PUT)",id:"update-record-put",level:3},{value:"Delete Record (DELETE)",id:"delete-record-delete",level:3},{value:"API Endpoints",id:"api-endpoints",level:2},{value:"Query Records (GET)",id:"query-records-get",level:3},{value:"Data Types",id:"data-types",level:2},{value:"Example Usage",id:"example-usage",level:2},{value:"Notes",id:"notes",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"sqlite-sink-plugin",children:"SQLite Sink Plugin"})}),"\n",(0,s.jsx)(n.p,{children:"The SQLite Sink plugin provides a way to store and retrieve data in a SQLite database through HTTP endpoints. It supports basic CRUD operations and querying capabilities."}),"\n",(0,s.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,s.jsx)(n.p,{children:"To use the SQLite Sink plugin, you need to configure it with the following parameters:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "database": "/path/to/your/database.db",\n  "listen_port": "8080",\n  "listen_host": "localhost",\n  "static_dir": "/path/to/static/files"\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"Complete example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "relayUrl": "http://localhost:8100/",\n  "envName": "test",\n  "listenUsingTailscale": false,\n  "listenAddress": "",\n  "exposedPort": 8200,\n  "sources": [\n    {\n      "name": "the_source",\n      "relayAuthenticationBearer": "my-secret",\n      "sinks": ["the-sink"]\n    }\n  ],\n  "sinks": [\n    {\n      "name": "the-sink",\n      "type": "db",\n      "id": "the-sink",\n      "params": {\n        "database": "./the-sink.sqlite3",\n        "listen_port": "8300",\n        "listen_host": "localhost",\n        "static_dir": "./the-sink-assets"\n      }\n    }\n  ]\n}\n'})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"database"}),": Path to the SQLite database file"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"listen_port"}),": Port number for the HTTP server"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"listen_host"}),': Host address for the HTTP server (defaults to "localhost")']}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"static_dir"}),": Directory for serving static files"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"input-event-format",children:"Input event format"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Tables and columns are created automatically based on the data being inserted"}),"\n",(0,s.jsxs)(n.li,{children:["All operations require an ",(0,s.jsx)(n.code,{children:"id"})," field (can be int or string)"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"createupdate-record-post",children:"Create/Update Record (POST)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-http",children:'POST /rpf-db/{table-name}\nContent-Type: application/json\n\n{\n  "id": "unique-id",\n  "field1": "value1",\n  "field2": 123\n}\n'})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.code,{children:"id"})," field is mandatory"]}),"\n",(0,s.jsx)(n.li,{children:"Table and columns are created automatically based on the data"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"update-record-put",children:"Update Record (PUT)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-http",children:'PUT /rpf-db/{table-name}\nContent-Type: application/json\n\n{\n  "id": "existing-id",\n  "field1": "new-value"\n}\n'})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Updates existing record"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"id"})," is required to identify the record"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"delete-record-delete",children:"Delete Record (DELETE)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-http",children:'DELETE /rpf-db/{table-name}\nContent-Type: application/json\n\n{\n  "id": "record-id-to-delete"\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"api-endpoints",children:"API Endpoints"}),"\n",(0,s.jsx)(n.h3,{id:"query-records-get",children:"Query Records (GET)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-http",children:"GET /{plugin-id}/rpf-db/{table-name}?field1=value1&order=field1&limit=10\n"})}),"\n",(0,s.jsx)(n.p,{children:"Query Parameters:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Any field can be used as a filter: ",(0,s.jsx)(n.code,{children:"field1=value1"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"order"}),": Sort results by specified field"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"limit"}),": Limit number of returned records"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"data-types",children:"Data Types"}),"\n",(0,s.jsx)(n.p,{children:"The plugin automatically determines and creates columns with appropriate SQLite data types:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"INTEGER"}),": For integer values"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"REAL"}),": For floating-point numbers"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"BOOLEAN"}),": For boolean values"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"TEXT"}),": For strings and other types (default)"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"example-usage",children:"Example Usage"}),"\n",(0,s.jsxs)(n.ol,{start:"4",children:["\n",(0,s.jsx)(n.li,{children:"Delete a record:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'curl -X DELETE "http://localhost:8080/my-plugin/rpf-db/users" \\\n  -H "Content-Type: application/json" \\\n  -d \'{"id": "user1"}\'\n'})}),"\n",(0,s.jsx)(n.h2,{id:"notes",children:"Notes"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Static files can be served from the configured static directory at ",(0,s.jsx)(n.code,{children:"/{plugin-id}/static/"})]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>a});var s=i(6540);const t={},r=s.createContext(t);function l(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);