"use strict";(self.webpackChunkreplayforge=self.webpackChunkreplayforge||[]).push([[3720],{8920:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var t=s(4848),i=s(8453);const r={sidebar_position:1},o="Monitoring",a={id:"advanced/monitoring",title:"Monitoring",description:"Status Monitoring (statusz) Documentation for relay",source:"@site/docs/advanced/monitoring.md",sourceDirName:"advanced",slug:"/advanced/monitoring",permalink:"/replayforge/docs/advanced/monitoring",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/advanced/monitoring.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Advanced",permalink:"/replayforge/docs/category/advanced"},next:{title:"Use Tailscale",permalink:"/replayforge/docs/advanced/tailscale"}},c={},d=[{value:"Status Monitoring (statusz) Documentation for relay",id:"status-monitoring-statusz-documentation-for-relay",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Status Endpoint",id:"status-endpoint",level:2},{value:"Endpoint Details",id:"endpoint-details",level:3},{value:"Response Format",id:"response-format",level:3},{value:"Metrics Description",id:"metrics-description",level:3},{value:"General Metrics",id:"general-metrics",level:4},{value:"Per-Bucket/Env/Hostname Statistics",id:"per-bucketenvhostname-statistics",level:4},{value:"Node Information",id:"node-information",level:4},{value:"Stats Reset",id:"stats-reset",level:3},{value:"Usage Example",id:"usage-example",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"monitoring",children:"Monitoring"})}),"\n",(0,t.jsx)(n.h2,{id:"status-monitoring-statusz-documentation-for-relay",children:"Status Monitoring (statusz) Documentation for relay"}),"\n",(0,t.jsx)(n.p,{children:"The relay server provides a status monitoring endpoint that exposes various metrics and information about the server's operation."}),"\n",(0,t.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,t.jsxs)(n.p,{children:["The status server is configured using the ",(0,t.jsx)(n.code,{children:"portStatusZ"})," field in the configuration file:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "portStatusZ": 8082,  // Port where status endpoint will be available\n  // ... other configuration\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"status-endpoint",children:"Status Endpoint"}),"\n",(0,t.jsx)(n.h3,{id:"endpoint-details",children:"Endpoint Details"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"URL"}),": ",(0,t.jsx)(n.code,{children:"/statusz"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Method"}),": GET"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Port"}),": Configured via ",(0,t.jsx)(n.code,{children:"portStatusZ"})," in config file"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"response-format",children:"Response Format"}),"\n",(0,t.jsx)(n.p,{children:"The endpoint returns a JSON object with the following structure:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "uptime": "1h2m3s",\n  "buckets": {\n    "bucket-name": {\n      "kind": "relay",\n      "id": "bucket-name",\n      "rxMessagesByMinute": 100,\n      "lastMinuteRxMessages": 95,\n      "rxMessagesSinceStart": 1000,\n      "rxLastMessageDate": "2023-01-01T12:00:00Z",\n      "rxQueryByMinute": 10,\n      "txMessageByMinute": 50,\n      "txQueryByMinute": 5,\n      "txLastAccess": "2023-01-01T12:00:00Z"\n    }\n  },\n  "envs": {\n    "env-name": {\n      // Same structure as buckets\n    }\n  },\n  "hostnames": {\n    "host-name": {\n      // Same structure as buckets\n    }\n  },\n  "nodeInfo": {\n    "hostname": {\n      "memoryProcess": 100.5,\n      "memoryHostTotal": 8192.0,\n      "memoryHostFree": 4096.0,\n      "memoryHostUsedPct": 50.0,\n      "cpuPercentHost": 25.0,\n      "lastUpdated": "2023-01-01T12:00:00Z",\n      "warnCount": 0,\n      "errorCount": 0\n    }\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"metrics-description",children:"Metrics Description"}),"\n",(0,t.jsx)(n.h4,{id:"general-metrics",children:"General Metrics"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"uptime"}),": Server uptime since start"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"per-bucketenvhostname-statistics",children:"Per-Bucket/Env/Hostname Statistics"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"rxMessagesByMinute"}),": Number of messages received in the current minute"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"lastMinuteRxMessages"}),": Number of messages received in the previous minute"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"rxMessagesSinceStart"}),": Total messages received since server start"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"rxLastMessageDate"}),": Timestamp of last received message"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"rxQueryByMinute"}),": Number of receive queries in the current minute"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"txMessageByMinute"}),": Number of messages transmitted in the current minute"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"txQueryByMinute"}),": Number of transmit queries in the current minute"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"txLastAccess"}),": Last transmit access timestamp"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"node-information",children:"Node Information"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"memoryProcess"}),": Process memory usage (Bytes)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"memoryHostTotal"}),": Total host memory (Bytes)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"memoryHostFree"}),": Free host memory (Bytes)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"memoryHostUsedPct"}),": Host memory usage percentage"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"cpuPercentHost"}),": Host CPU usage percentage"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"lastUpdated"}),": Last time node info was updated"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"warnCount"}),": Number of warnings"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"errorCount"}),": Number of errors"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"stats-reset",children:"Stats Reset"}),"\n",(0,t.jsx)(n.p,{children:'The per-minute statistics (metrics ending with "ByMinute") are automatically reset every minute, with the previous minute\'s values stored in corresponding "last minute" fields.'}),"\n",(0,t.jsx)(n.h2,{id:"usage-example",children:"Usage Example"}),"\n",(0,t.jsx)(n.p,{children:"To fetch the status information:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"curl http://your-server:status-port/statusz\n"})}),"\n",(0,t.jsx)(n.p,{children:"This endpoint is useful for:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Monitoring server health"}),"\n",(0,t.jsx)(n.li,{children:"Tracking message throughput"}),"\n",(0,t.jsx)(n.li,{children:"Debugging performance issues"}),"\n",(0,t.jsx)(n.li,{children:"System resource monitoring"}),"\n",(0,t.jsx)(n.li,{children:"Node status tracking across a distributed system"}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>a});var t=s(6540);const i={},r=t.createContext(i);function o(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);