"use strict";(self.webpackChunkreplayforge=self.webpackChunkreplayforge||[]).push([[4563],{981:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var s=t(4848),r=t(8453);const a={sidebar_position:1},o="Transform Scripts",i={id:"tutorial-transform-scripts/transform-scripts",title:"Transform Scripts",description:"simple example",source:"@site/docs/tutorial-transform-scripts/transform-scripts.md",sourceDirName:"tutorial-transform-scripts",slug:"/tutorial-transform-scripts/transform-scripts",permalink:"/replayforge/docs/tutorial-transform-scripts/transform-scripts",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tutorial-transform-scripts/transform-scripts.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Tutorial - Transform scripts",permalink:"/replayforge/docs/category/tutorial---transform-scripts"},next:{title:"Use cases",permalink:"/replayforge/docs/category/use-cases"}},c={},l=[{value:"simple example",id:"simple-example",level:2},{value:"unwrap and wrap content",id:"unwrap-and-wrap-content",level:2},{value:"alert on no message",id:"alert-on-no-message",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"transform-scripts",children:"Transform Scripts"})}),"\n",(0,s.jsx)(n.h2,{id:"simple-example",children:"simple example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:"function Process(content, emit)\n    emit('the-sink', content)\nend\n"})}),"\n",(0,s.jsx)(n.h2,{id:"unwrap-and-wrap-content",children:"unwrap and wrap content"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:"\nfunction Process(content, emit)\n    local data = json_decode(content)\n    local body = data['body']\n\n    -- body can be plain text or json\n    -- if it's json, we can access its fields using json_decode(body)\n\n    local ip = data['ip']\n    local path = data['path']\n    local params = data['params']\n    local headers = data['headers']\n\n    local wrapped = json_encode({\n        body = body,\n        ip = ip,\n        path = path,\n        params = params,\n        headers = headers,\n        method = r.Method,\n    })\n\n    emit('the-sink', wrapped)\nend\n"})}),"\n",(0,s.jsx)(n.h2,{id:"alert-on-no-message",children:"alert on no message"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:"local last_message_time = os.time()\nlocal alert_sent = false\n\nfunction TimerHandler(emit)\n    local current_time = os.time()\n    if current_time - last_message_time > 300 and not alert_sent then -- 5 minutes = 300 seconds\n        emit('notifications', json_encode({\n            method = 'POST',\n            body = json_encode({\n                message = 'No logs received in the last 5 minutes',\n            })\n        }))\n        alert_sent = true\n    end\nend\n\nfunction Process(content, emit)\n    last_message_time = os.time()\n    if alert_sent then\n        emit('notifications', json_encode({\n            body = json_encode({\n                message = 'Service restored - logs are being received again',\n            })\n        }))\n        alert_sent = false\n    end\n    emit('the-sink', content)\nend\n"})})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>i});var s=t(6540);const r={},a=s.createContext(r);function o(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);